class Solution {
public:
    bool areAlmostEqual(string s1, string s2) {
        unordered_map<char,int>m1,m2;
        if(s1.size()!=s2.size()) return 0;
        for(int i = 0;i<s1.length();i++){
                m1[s1[i]]++;
                m2[s2[i]]++;
        }
        int c=0;
        for(int i=0;i<s1.size();i++){
            if(s1[i]!=s2[i]) c++;
        }
        if(m1==m2 and (c==2 or c==0)) return 1;
        return 0;
    }
};






class Solution {
public:
    bool areAlmostEqual(string s1, string s2) {
        if (s1==s2) return true;
        int l=0,r=s1.size()-1;
        while(s1[l]==s2[l]) l++;
        while(s1[r]==s2[r]) r--;
        swap(s1[l],s1[r]);
        return s1==s2;
    }
};
