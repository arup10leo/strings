pangram or not?

bool checkPangram (string &s2) {
        // your code here
        map<char,int>m;
        transform(s2.begin(), s2.end(), s2.begin(), ::tolower);
        for(int i=0;i<s2.length();i++){
            if(s2[i]>='a' and s2[i]<='z')
            m[s2[i]]++;
        }
        if(m.size()==26)
        return 1;
        return 0;
    }
    
    
    
    
 Given two strings of lowercase alphabets and a value K, your task is to complete the given function which tells if  two strings are K-anagrams of each other or not.

Two strings are called K-anagrams if both of the below conditions are true.
1. Both have same number of characters.
2. Two strings can become anagram by changing at most K characters in a string.

Example:

Input:
str1 = "fodr", str2="gork"
k = 2
Output:
1
Explanation: Can change fd to gk
     if(str1.size()!=str2.size()){

            return false;

        }

        map<char,int>m;

        for(auto s:str1){

            m[s]++;

        }

        for(auto s:str2){

            if(m.count(s)!=0)

                m[s]--;

        }

        int count=0;

        for(auto a:m){

            if(a.second>0)

                count+=a.second;

        }

        return (count<=k)?1:0;
